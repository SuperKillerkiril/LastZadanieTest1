@page "/AddProduct"
@using Microsoft.AspNetCore.Authorization
@using UrbanMuse.DataBase
@using UrbanMuse.Models
@inject ModelContext ef
@rendermode InteractiveServer


<div class="store-header">
    <img class="store-header-img" src="LocalImage/IconAndGroup/amphora.svg">
    <div class="store-header-logo-text">
        URBAN MUSE
    </div>
    <div class="store-header-text-container">
        <div class="store-header-text-home-2025">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                HOME
            </NavLink>
        </div>
        <div class="store-header-text-store">
            <NavLink class="nav-link" href="store">STORE</NavLink> 
        </div>
    </div>
</div>

<div class="registered-custom-background">
    <EditForm class="registered-container"  Model="_product" OnValidSubmit="@SumbitProduct">
        <h1>Создание нового продукта</h1>
        <a>Название</a>
        <input type="text" @bind="_product.Name"/>
        <a>Стоимость?</a>
        <input type="number" @bind="_product.Price"/>
        <a>Описание</a>
        <input tupe="text" @bind="_product.Description"/>
        <a>Путь к изображению</a>
        <input type="text" @bind="_product.Image"/>
        
        <a>Тип</a>
        <select @bind="SelectedType">
            @foreach (ProductEnumType productEnumType in Enum.GetValues(typeof(ProductEnumType)))
            {
                <option value="@productEnumType">@productEnumType</option>
            }
        </select>
    
        <div style="display: flex; flex-wrap: wrap; margin: 20px;">
            <button type="submit">Добавить продукт</button>
            <button @onclick="ClearForm">Отчистить форму</button>
        </div>
    
        <a>@_msg</a>
    </EditForm>

</div>

@code {
    Product _product = new();
    private string? _msg = String.Empty;
    private string? SelectedType = Convert.ToString(ProductEnumType.Hoodie);

    public void SumbitProduct()
    {
        try
        {
            _product.CreatedAt = DateTime.Now;
            _product.Type = SelectedType;
            ef.Add(_product);
            ef.SaveChanges();
            _msg = "You have successfully add product";
        }
        catch (Exception e)
        {
            _msg = Convert.ToString(e);
        }
    }

    public void ClearForm()
    {
        _product = new Product();
        _msg = string.Empty;
        StateHasChanged();
    }
}
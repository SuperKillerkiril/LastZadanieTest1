@page "/store"
@using UrbanMuse.DataBase
@using UrbanMuse.Models
@rendermode InteractiveServer
@inject ModelContext ef
@inject IJSRuntime IJSRuntime
@inject NavigationManager Navigation


<div class="store-header">
    <img class="store-header-img" src="LocalImage/IconAndGroup/amphora.svg">
        <NavLink class="nav-link" href="about">
            <div class="store-header-logo-text">
                URBAN MUSE
            </div>
        </NavLink>
    <div class="store-header-text-container">
        <div class="store-header-text-home-2025">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                HOME
            </NavLink>
        </div>
        <div class="store-header-text-store">
            <NavLink class="nav-link" href="store">STORE</NavLink>
        </div>
        <div class="store-header-text-home-2025">
            @_actualYear
        </div><!--Можно кодом актуальный год поставить или год самой свежей коллекции (фильтр по бд)-->
    </div>
    <div class="store-header-button-container">
        <img class="store-header-button-img" src="LocalImage/IconAndGroup/поиск.svg"/>
        <img class="store-header-button-img" src="LocalImage/IconAndGroup/корзина.svg"/>
    </div>
</div>

<div @onscroll="@OnScroll" id="myDiv" class="home-custom-background">
    <div class="store-title-slogan">
        ART IN EVERYDAY
    </div>
    <div class="store-background-catalog">
        <div class="store-filter-container">
            <div class="store-filter-button-allprod">
                <img class="store-filter-img" src="LocalImage/IconAndGroup/shopping-basket.svg"/>
                <button class="store-filter-button" @onclick="UpdatePage">ALL PRODUCT</button>
            </div>
            <div class="store-filter-button-allprod">
                <img class="store-filter-img" src="LocalImage/IconAndGroup/list.svg"/>
                <button class="store-filter-button" @onclick="ToggleMenu">TYPE</button>
            </div>
            @if (IsMenuOpen)
            {
                foreach ( ProductEnumType productEnumType in Enum.GetValues(typeof(ProductEnumType)))
                {
                    <button @onclick=" () => ReSearch(productEnumType)" class="dropdown-store-menu">@productEnumType</button>
                }
            }
        </div>
        <div class="store-product-card-container">
            @foreach (var prod in _products)
            { <div class="store-product-card"><!--Добавить ограничение по максимуму и минимуму пикселей проверить верстку-->
                <img src="@prod.Image"/>
                <div class="store-product-card-description">
                    <div class="store-product-card-name">@prod.Name</div>
                    <div class="store-product-card-price">$@prod.Price</div>
                    <div>@prod.Id</div>
                </div>
                <div class="store-product-card-description">
                    <button class="store-product-card-button-add-to-cart">Add to cart</button>
                    <button class="store-product-card-button-buy" @onclick="() =>GoToProductDetail(prod.Id)">Buy</button><!--Поменять картинку на продукт с белым фоном из фигмы, и поменять контейнер-->
                </div>
                </div>
            }
        </div>
    </div>
</div>


<script suppress-error="BL9992">
    window.getScrollToTop =  (selector) => {
        return document.querySelector(selector).scrollTop
    }
</script>


@code {
    private readonly int _actualYear = DateTime.Now.Year;
    public int ScrollTop { get; set; }
    private bool IsMenuOpen = false;
    private int counter = 0;
    private List<Product> _products = new List<Product>();

    protected override void OnInitialized()
    {
        LoadProduct();
    }
    private void LoadProduct()
    {
        _products = ef.Products.ToList();
    }

    private void GoToProductDetail(int productId)
    {
        Navigation.NavigateTo($"/product/{productId}");
    }
    
    private void ToggleMenu()
    {
        IsMenuOpen = !IsMenuOpen;
    }
    
    private async Task OnScroll(EventArgs e)
    {
        ScrollTop = await IJSRuntime.InvokeAsync<int>("getScrollToTop", "#myDiv");
    }

    void UpdatePage()
    {
        StateHasChanged();
    }

    private void ReSearch(ProductEnumType productEnumTypeType)
    {
        
    }
    
}
@page "/auth"
@using UrbanMuse.DataBase
@using UrbanMuse.Models
@inject ModelContext ef
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@rendermode InteractiveServer

<div class="registered-custom-background">
    <div class="registered-container">
        <h3 class="registered-text">AUTHENTICATION</h3>
        <div class="registered-form">
            <input class="registered-form-input" type="text" @bind="_client.Email" placeholder="Email"/>
            <input class="registered-form-input" type="password" @bind="_client.Password" placeholder="Password"/>
            <button class="registered-form-button" @onclick="AuthUser">ACCEPT</button>
            @if (IsAuth)
            {
            <button class="registered-form-button" @onclick="ReAuth">log in to a new account</button>
            }
        </div>
        @Msg
    </div>
</div>

@code {
    Client _client = new Client();
    Client _authClient = new Client();
    private bool IsAuth = false;
    private string Msg;

    protected override async void OnInitialized()
    {
        try
        {
            IsAuth = await LocalStorage.GetItemAsync<bool>("IsAuth");
            if (IsAuth)
            {
                Msg = "You have successfully logged in";
            }
        }
        catch
        {
            IsAuth = false;
        }
    }

    private void ReAuth()
    {
        LocalStorage.SetItemAsync("IsAuth", false);
        Msg = "Enter your account details";
        StateHasChanged();
    }
    
    public async Task AuthUser()
    {
        _authClient = ef.Clients.FirstOrDefault(c => c.Email == _client.Email);
        try
        {
            if (_authClient != null && _authClient.Password == _client.Password)
            {
                Msg = "You have successfully logged in";
                LocalStorage.SetItemAsync("clientId", _client.Id);
                LocalStorage.SetItemAsync("clientemail", _client.Email);
                LocalStorage.SetItemAsync("clientpassword", _client.Password);
                LocalStorage.SetItemAsync("IsAuth", true);
                await Task.Delay(1000);
                NavigationManager.NavigateTo("");
            }
            else
            {
                Msg = "incorrect email or password";
            }
        }
        catch (Exception e)
        {
            Msg = e.ToString();
        }
        
    }
}